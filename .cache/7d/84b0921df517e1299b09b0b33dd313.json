{"id":"9LB8","dependencies":[{"name":"/Users/akella/package.json","includedInParent":true,"mtime":1625327502542}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float uProgress;\\nuniform vec2 uTextureSize;\\nuniform sampler2D uTexture;\\nvarying vec2 vUv;\\n\\nvarying vec2 vSize;\\n\\nvec2 getUV(vec2 uv, vec2 textureSize, vec2 quadSize){\\n    vec2 tempUV = uv - vec2(0.5);\\n\\n    float quadAspect = quadSize.x/quadSize.y;\\n    float textureAspect = textureSize.x/textureSize.y;\\n    if(quadAspect<textureAspect){\\n        tempUV = tempUV*vec2(quadAspect/textureAspect,1.);\\n    } else{\\n        tempUV = tempUV*vec2(1.,textureAspect/quadAspect);\\n    }\\n\\n    tempUV += vec2(0.5);\\n    return tempUV;\\n}\\nvoid main() {\\n\\n    vec2 correctUV = getUV(vUv,uTextureSize,vSize);\\n    vec4 image = texture2D(uTexture,correctUV);\\n    gl_FragColor = vec4( vUv,0.,1.);\\n    gl_FragColor = image;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":792},"source":"js/shaders/fragment.glsl","original":{"line":1,"column":0}}],"sources":{"js/shaders/fragment.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float uProgress;\\nuniform vec2 uTextureSize;\\nuniform sampler2D uTexture;\\nvarying vec2 vUv;\\n\\nvarying vec2 vSize;\\n\\nvec2 getUV(vec2 uv, vec2 textureSize, vec2 quadSize){\\n    vec2 tempUV = uv - vec2(0.5);\\n\\n    float quadAspect = quadSize.x/quadSize.y;\\n    float textureAspect = textureSize.x/textureSize.y;\\n    if(quadAspect<textureAspect){\\n        tempUV = tempUV*vec2(quadAspect/textureAspect,1.);\\n    } else{\\n        tempUV = tempUV*vec2(1.,textureAspect/quadAspect);\\n    }\\n\\n    tempUV += vec2(0.5);\\n    return tempUV;\\n}\\nvoid main() {\\n\\n    vec2 correctUV = getUV(vUv,uTextureSize,vSize);\\n    vec4 image = texture2D(uTexture,correctUV);\\n    gl_FragColor = vec4( vUv,0.,1.);\\n    gl_FragColor = image;\\n}\";"},"lineCount":null}},"error":null,"hash":"b12f44c9c8eb24272be494a5863cb78f","cacheData":{"env":{}}}